{"version":3,"sources":["images/icon.png","images/painting/art.JPG","images/painting/collage.JPG","images/painting/t2.JPG","images/p.JPG","images/disney/al.jpg","images/disney/dumbo.jpg","images/disney/em.JPG","images/disney/fish.JPG","images/disney/ls.JPG","images/disney/mi.JPG","images/d.png","images/d2.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","Grid","container","style","backgroundColor","height","item","xs","padding","position","flexDirection","width","fontFamily","src","icon","alt","borderRadius","marginBottom","marginTop","color","href","paddingTop","marginLeft","paddingBottom","fontWeight","t2","paddingLeft","collage","art","dumbo","al","ls","em","fish","mi","p","d","d2","title","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c0adf9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.155cd4fe.png\";","module.exports = __webpack_public_path__ + \"static/media/art.06eda5f3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/collage.aac95222.JPG\";","module.exports = __webpack_public_path__ + \"static/media/t2.aac021d1.JPG\";","module.exports = __webpack_public_path__ + \"static/media/p.2ed9bbcc.JPG\";","module.exports = __webpack_public_path__ + \"static/media/al.801c7dc9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dumbo.b62d8ffa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/em.f50cf9fb.JPG\";","module.exports = __webpack_public_path__ + \"static/media/fish.a8204920.JPG\";","module.exports = __webpack_public_path__ + \"static/media/ls.54582f7b.JPG\";","module.exports = __webpack_public_path__ + \"static/media/mi.bd64d50b.JPG\";","module.exports = __webpack_public_path__ + \"static/media/d.e3a31a82.png\";","module.exports = __webpack_public_path__ + \"static/media/d2.cf3f16c0.png\";","import React from 'react';\nimport './App.css';\nimport { Grid } from '@material-ui/core';\nimport icon from './images/icon.png';\nimport art from './images/painting/art.JPG'\nimport collage from './images/painting/collage.JPG'\nimport t2 from './images/painting/t2.JPG'\nimport p from './images/p.JPG';\nimport al from './images/disney/al.jpg';\nimport dumbo from './images/disney/dumbo.jpg';\nimport em from './images/disney/em.JPG';\nimport fish from './images/disney/fish.JPG';\nimport ls from './images/disney/ls.JPG';\nimport mi from './images/disney/mi.JPG';\nimport d from './images/d.png';\nimport d2 from './images/d2.png';\n\nfunction App() {\n  return (\n    <Grid container style={{ backgroundColor: '#f2f3ff', height: '100%' }}>\n\n      <Grid item xs={4} style={{ padding: '40px 50px 0px 80px', position: 'fixed', flexDirection: 'column', backgroundColor: 'white', height: '100%', width: 400 }}>\n        <h2 style={{ fontFamily: 'Helvetica' }}>\n          Sarah Varghese\n        </h2>\n        <Grid container >\n          <img src={icon} alt='icon' style={{ height: 200, borderRadius: '30%' }} />\n        </Grid>\n        <br />\n        <h4 style={{ marginBottom: 0 }}> Software Engineer/UI Developer</h4>\n        <h5 style={{ marginTop: 0, color: 'gray' }}><i>who also enjoys making art</i></h5>\n        <br />\n        <h5 style={{ marginTop: 0, color: 'gray' }}>this website is a small collection of the art I've created over the years</h5>\n        <br />\n        <h5 style={{ marginTop: 0, color: 'gray' }}>Information about my technical work is listed on my <a href=\"https://www.linkedin.com/in/sarahmvarghese/\">LinkedIn</a></h5>\n        <br /><br /><br />\n        <h5 style={{ marginTop: 0, color: 'gray' }}><i>Technology, like art, is a soaring exercise of the human imagination</i></h5>\n      </Grid>\n\n      <Grid item xs={7} style={{ paddingTop: 40, marginLeft: 500, paddingBottom: 200 }}>\n\n        <Grid container>\n          <Grid item xs={12}>\n            <h2 style={{ fontFamily: 'Helvetica', fontWeight: 'bold' }}>\n              paintings\n            </h2>\n          </Grid>\n          <Grid item xs={12}  style={{height: 450}}>\n            <img src={t2} alt='t2' style={{height: 400}}/>\n          </Grid>\n          <Grid item xs={12}  style={{height: 450, paddingLeft: 100}}>\n            <img src={collage} alt='collage' style={{height: 400}}/>\n          </Grid>\n          <Grid item xs={12}  style={{height: 450, paddingLeft: 200}}>\n            <img src={art} alt='art' style={{height: 400}}/>\n          </Grid>\n        </Grid>\n\n        <Grid container>\n          <Grid item xs={12}>\n          <h2 style={{ fontFamily: 'Helvetica', fontWeight: 'bold' }}>\n            sketches\n          </h2>\n          </Grid>\n          <Grid item xs={12}  style={{height: 500}}>\n            <img src={dumbo} alt='dumbo' style={{height: 400}}/>\n          </Grid>\n          <Grid item xs={6}  style={{height: 500}}>\n            <img src={al} alt='al' style={{height: 400}}/>\n          </Grid>\n          <Grid item xs={6}  style={{height: 500}}>\n            <img src={ls} alt='ls' style={{height: 400}}/>\n          </Grid>\n          <Grid item xs={6}  style={{height: 500}}>\n            <img src={em} alt='em' style={{height: 400}}/>\n          </Grid>\n          <Grid item xs={6}  style={{height: 500}}>\n            <img src={fish} alt='fish' style={{height: 400}}/>\n          </Grid>\n          <Grid item xs={6}  style={{height: 500}}>\n            <img src={mi} alt='mi' style={{height: 400}}/>\n          </Grid>\n          <Grid item xs={6}  style={{height: 500}}>\n            <img src={p} alt='p' style={{height: 400}}/>\n          </Grid>\n        </Grid>\n\n        <Grid container>\n          <Grid item xs={12}>\n            <h2 style={{ fontFamily: 'Helvetica', fontWeight: 'bold' }}>\n              digital art\n            </h2>\n          </Grid>\n          <Grid item xs={12} style={{paddingBottom: 10}}>\n            <img src={d} alt='d' style={{height: 515}}/>\n          </Grid>\n          <Grid item xs={12}>\n            <img src={d2} alt='d2' style={{height: 300}}/>\n          </Grid>\n        </Grid>\n\n        <Grid container>\n          <Grid item xs={12}>\n            <h2 style={{ fontFamily: 'Helvetica', fontWeight: 'bold' }}>\n              animation\n          </h2>\n          </Grid>\n          <br />\n          <Grid item xs={12}>\n            <iframe src=\"https://drive.google.com/file/d/1gOFb1OCTxPAt_ExjwGDK9Apn04Na7lWf/preview\" width=\"560\" height=\"315\" title='video'/>\n          </Grid>\n          <br />\n          <Grid item xs={12}>\n            <iframe src=\"https://drive.google.com/file/d/1rYuMrv4buDHLl9b_LNsM9-hzu2O_ZZsk/preview\" width=\"560\" height=\"315\" title='video'/>\n          </Grid>\n        </Grid>\n\n      </Grid>\n\n    </Grid>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}